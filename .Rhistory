row <- events[i,]
event_dataframes[[i]] <- tibble(event_id=rep(row$event_id, 6),
country = rep(row$country, 6),
country_code = rep(row$country_code, 6),
country_code_c = rep(row$country_code_c, 6),
event_date = rep(row$event_date, 6),
event_year = rep(row$year, 6),
start_year = rep(row$start_year,6),
year = row$start_year:(row$start_year+5),
after = c(0,0,0,1,1,1))
}
event_dataframe <- do.call(rbind,event_dataframes) # now bind all dataframes into a single dataframe
## MERGE 'event_dataframe' and GALLUP 'assasraw' to select only the years and countries required and fill each row with the
# interrupted time series variables required
assas <- left_join(event_dataframe, assasraw, by=c("country_code", "year"))%>%
select(-country.y, -country_code_c.y, -YEAR_CALENDAR) %>%
rename(country=country.x, country_code_c=country_code_c.x, weight=WGT) %>%
mutate(year_number = as.numeric(interval(event_date, survey_date), 'years')) %>%
mutate(year_after = if_else(after==1,as.numeric(interval(event_date, survey_date), 'years'), 0))
## IMPORT CNTS DATA
cnts <- import("Raw Data/2021 Edition CNTSDATA.xlsx", skip = 1)
#extracting the domestic conflict variable
#getting country codes to facilitate merging
cntsa <- cnts %>% select(year, country, domestic9) %>%
mutate(country_code = countrycode(country, origin="country.name",
destination="iso3n", warn=TRUE, nomatch=NULL,
custom_match=c("Azerbaijan"="031", "Kosovo"="926"))) %>%
select(-country)
#getting pre-event conflict data
merged <- assas %>% left_join(., cntsa, by = c("country_code", "year"))
merged_before <- merged %>% filter(after == 0) %>%
group_by(country_code) %>%
summarize(conflict = mean(domestic9, na.rm=T))
#MERGE CNTS pre-event conflict data back to the assas object
assas <- assas %>% left_join(., merged_before)
##IMPORT GDP and V-DEM data
country <- import("Raw Data/GDPandLDI.csv") %>%
select(country = "Country Name", year = Year, gdp = GDPperCapPPP, dem = v2x_libdem) %>%
mutate(country_code = countrycode(country, origin="country.name",
destination="iso3n", warn=TRUE, nomatch=NULL,
custom_match=c("Azerbaijan"="031", "Kosovo"="926","Turkiye" = "792"))) %>%
select(-country)
#MERGE country-level covariates to assas data
assas <- assas %>% left_join(., country, by = c("country_code","year"))
#DATA PROCESSING creating standardized country-level covariates
#GDP is log2 transformed to account for diminishing return
assas <- assas %>% ungroup() %>%
mutate(loggdp_z = scale(log2(gdp))[,1],
conflict_z = scale(conflict)[,1])
write.csv(assas, "assas.csv")
library(tidyverse)
assas <- read.csv("assas.csv")
unique(assas$country)
countries <- unique(assas$country)
for countryname in countries {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight))
summary(ls.model)
}
for (countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight))
summary(ls.model)
}
for (countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight))
summary(ls.model)
}
for(countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight))
summary(ls.model)
}
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
for(countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summary(ls.model)
}
country <- filter(assas, country=="US")
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summary(ls.model)
for(countryname in countries) {
country <- filter(assas, country=="US")
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
i <- i+1
}
summaries <- list()
library(tidyverse)
assas <- read.csv("assas.csv")
countries <- unique(assas$country)
i<- 1
summaries <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
i <- i+1
}
View(summaries)
print(summaries)
library(sjPlot)
tab_model(models[1])
for(countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
for(countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
tab_model(models[1])
models[1]
for(countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
View(models)
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
View(models)
models <- list()
i<- 1
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
tab_model(models[1])
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)%>%
rename(ls=countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)%>%
rename(countryname=ls)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
countries <- unique(assas$country)
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)%>%
rename(countryname=ls)
ls.model <- lm(countryname ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
tab_model(models[1], models[2])
models[1]
View(assas)
View(country)
tab_model(models[1], models[2], dv.labels = c("Armenia", "OtherCountry"))
for(countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
tab_model(models[1], models[2], dv.labels = c("Armenia", "OtherCountry"))
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
ls.model <- lm(ls ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
View(models)
tab_model(models[1], models[2], dv.labels = c("Armenia", "OtherCountry"))
tab_model(models[1])
tab_model(models[1], models[2])
tab_model(models)
tab_model(models, dv.labels = countries)
tab_model(models, dv.labels = countries, file="individual_country_output.html")
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
pa.model <- lm(pa ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(ls.model)
models[[i]] <- ls.model
i <- i+1
}
tab_model(models, dv.labels = countries, file="individual_country_output_pa.html")
### POSITIVE AFFECT ###
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
pa.model <- lm(pa ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(na.model)
models[[i]] <- na.model
i <- i+1
}
tab_model(models, dv.labels = countries, file="individual_country_output_pa.html")
### NEGATIVE AFFECT ###
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
na.model <- lm(na ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(na.model)
models[[i]] <- na.model
i <- i+1
}
tab_model(models, dv.labels = countries, file="individual_country_output_na.html")
### HOPE ###
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
hope.model <- lm(hope ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(hope.model)
models[[i]] <- hope.model
i <- i+1
}
tab_model(models, dv.labels = countries, file="individual_country_output_hope.html")
### POSITIVE AFFECT ###
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
pa.model <- lm(pa ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(na.model)
models[[i]] <- na.model
i <- i+1
}
tab_model(models, dv.labels = countries, file="individual_country_output_pa.html")
### POSITIVE AFFECT ###
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
pa.model <- lm(pa ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(na.model)
models[[i]] <- na.model
i <- i+1
}
tab_model(models, dv.labels = countries, file="individual_country_output_pa.html")
View(country)
### POSITIVE AFFECT ###
i<- 1
summaries <- list()
models <- list()
for(countryname in countries) {
country <- filter(assas, country==countryname)
pa.model <- lm(pa ~ year_number + after + year_after + loggdp_z + conflict_z, country, weight=weight)
summaries[[i]] <- summary(pa.model)
models[[i]] <- pa.model
i <- i+1
}
tab_model(models, dv.labels = countries, file="individual_country_output_pa.html")
install.packages("brms")
packages.install("brms")
install.packages("brms")
library(brms)
install.packages("Brobdingnag")
library(tidyverse)
library(brms)
install.packages("htmlwidgets")
library(brms)
assas <- read.csv("assas.csv")
##### ANALYSIS #####
## Life Satisfaction Model
ls.model <- brm(ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas, weight=weight,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
##### ANALYSIS #####
## Life Satisfaction Model
ls.model <- brm(ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas, weight=weight)
??brms
?brms
## Hope Model
hope.model <- brm(hope ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
##### ANALYSIS #####
## Life Satisfaction Model
ls.model <- brm(ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
install.packages('BH')
install.packages('BH')
install.packages('BH')
install.packages('BH')
install.packages('BH')
install.packages("~/Downloads/BH_1.78.0-0.zip", repos = NULL, type = "win.binary")
library(brms)
##### ANALYSIS #####
## Life Satisfaction Model
ls.model <- brm(ls|weights(weight) ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
install.packages("BH")
library(tidyverse)
library(brms)
assas <- read.csv("assas.csv")
##### ANALYSIS #####
## Life Satisfaction Model
ls.model <- brm(ls|weights(weight) ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
install.packages("Rtools")
##### ANALYSIS #####
## Life Satisfaction Model
ls.model <- brm(ls|weights(weight) ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
library(tidyverse)
library(brms)
assas <- read.csv("assas.csv")
##### ANALYSIS #####
## Life Satisfaction Model
ls.model <- brm(ls|weights(weight) ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
library(tidyverse)
library(brms)
assas <- read.csv("assas.csv")
ls.model <- bmr(ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
ls.model <- brm(ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
library(tidyverse)
library(brms)
assas <- read_csv("assas.csv")
ls.model <- brm(ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
ls.model <- brm(ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
ls.model <- brm(ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
library(tidyverse)
library(brms)
assas <- read_csv("assas.csv")
ls.model <- brm(ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
install.packages("brms")
install.packages("brms")
install.packages("brms")
install.packages("brms")
exit
library(brms)
install.packages(brms)
install.packages("brms)")
install.packages("brms")
assas <- read.csv("assas.csv")
ls.model <- brm(ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
library(brms)
ls.model <- brm(ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
ls.model <- brm(ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id), assas)
install.("rstanarm", "tictoc")
install.packages("rstanarm", "tictoc")
install.packages("rstanarm")
install.packages("tictoc")
library(tidyverse)
library(rstanarm)
library(brms)
library(tictoc)
install.packages("tidyverse")
options(mc.cores = parallel::detectCores())
CHAINS <- 4
ITER <- 2000
WARMUP <- 1000
BAYES.SEED <- 1234
# Make fake data
set.seed(1234)
data <- data_frame(y = rnorm(1000, 10, 4),
x1 = rbeta(1000, 1, 2) * 100,
x2 = rbeta(1000, 2, 3) * 100)
library(tidyverse)
library(rstanarm)
library(brms)
library(tictoc)
options(mc.cores = parallel::detectCores())
CHAINS <- 4
ITER <- 2000
WARMUP <- 1000
BAYES.SEED <- 1234
set.seed(1234)
data <- data_frame(y = rnorm(1000, 10, 4),
x1 = rbeta(1000, 1, 2) * 100,
x2 = rbeta(1000, 2, 3) * 100)
install.packages("tidyverse")
library(tidyverse)
library(dplyr)
set.seed(1234)
data <- data_frame(y = rnorm(1000, 10, 4),
x1 = rbeta(1000, 1, 2) * 100,
x2 = rbeta(1000, 2, 3) * 100)
tic()
model_rstanarm <- stan_glm(
y ~ x1 + x2,
family = gaussian(),
data = data,
prior = normal(0, 10),
prior_intercept = normal(0, 10),
prior_aux = exponential(1),
chains = CHAINS, iter = ITER, warmup = WARMUP, seed = BAYES.SEED
)
toc()
tic()
model_rstanarm <- stan_glm(
y ~ x1 + x2,
family = gaussian(),
data = data,
prior = normal(0, 10),
prior_intercept = normal(0, 10),
prior_aux = exponential('log'),
chains = CHAINS, iter = ITER, warmup = WARMUP, seed = BAYES.SEED
)
toc()
tic()
model_rstanarm <- stan_glm(
y ~ x1 + x2,
family = gaussian(),
data = data,
prior = normal(0, 10),
prior_intercept = normal(0, 10),
#prior_aux = exponential('log'),
chains = CHAINS, iter = ITER, warmup = WARMUP, seed = BAYES.SEED
)
toc()
tic()
model_brms <- brm(
y ~ x1 + x2,
family = gaussian(),
data = data,
prior = c(prior("normal(0, 10)", class = "b"),
prior("normal(0, 10)", class = "Intercept"),
prior("exponential(1)", class = "sigma")),
chains = CHAINS, iter = ITER, warmup = WARMUP, seed = BAYES.SEED, cores = 4
)
#> Compiling the C++ model
#> Start sampling
toc()
# Results are pretty much the same in the end
print(model_rstanarm, digits = 3)
print(model_brms, digits = 3)
model_brms <- brm(
ls ~ year_number + after + year_after + loggdp_z + conflict_z +
(year_number + after + year_after|event_id),
family = gaussian(),
data = assas,
prior = prior("normal(0, 10)", class = "b"),
chains = 4, iter = 2000, warmup = 1000, seed = 1234, cores = 4)
